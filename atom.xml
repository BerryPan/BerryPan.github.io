<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="https://www.w3.org/2005/Atom">
  <title>远歌</title>
  
  <subtitle>等风来，不如，追风去</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://jmpan.site/"/>
  <updated>2019-11-13T08:11:50.217Z</updated>
  <id>https://jmpan.site/</id>
  
  <author>
    <name>远歌</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>git出现&quot;LF will be replaced by CRLF&quot;解决方案</title>
    <link href="https://jmpan.site/posts/718df0a7/"/>
    <id>https://jmpan.site/posts/718df0a7/</id>
    <published>2019-11-13T08:03:20.000Z</published>
    <updated>2019-11-13T08:11:50.217Z</updated>
    
    <content type="html"><![CDATA[<p>在用git提交时会出现<code>LF will be replaced by CRLF</code>的错误，解决方案如下</p><a id="more"></a><h2 id="报错内容"><a href="#报错内容" class="headerlink" title="报错内容"></a>报错内容</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">warning: LF will be replaced by CRLF <span class="keyword">in</span> xxxxx.</span><br><span class="line">The file will have its original line endings <span class="keyword">in</span> your working directory</span><br></pre></td></tr></table></figure><h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><h3 id="直接让git自动替换"><a href="#直接让git自动替换" class="headerlink" title="直接让git自动替换"></a>直接让git自动替换</h3><p>打开命令行，输入：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config core.autocrlf true</span><br></pre></td></tr></table></figure><h3 id="在IDE中设置UNIX换行方式"><a href="#在IDE中设置UNIX换行方式" class="headerlink" title="在IDE中设置UNIX换行方式"></a>在IDE中设置UNIX换行方式</h3><p>以VSCode为例，打开<code>File-&gt;Perferences-&gt;Settings</code>，搜索<code>eol</code>，将<code>The default end of line character</code>改成<code>\r\n</code>（即CRLF），再次git就没有报错啦</p><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><p><a href="https://stackoverflow.com/questions/5834014/lf-will-be-replaced-by-crlf-in-git-what-is-that-and-is-it-important" target="_blank" rel="noopener">https://stackoverflow.com/questions/5834014/lf-will-be-replaced-by-crlf-in-git-what-is-that-and-is-it-important</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在用git提交时会出现&lt;code&gt;LF will be replaced by CRLF&lt;/code&gt;的错误，解决方案如下&lt;/p&gt;
    
    </summary>
    
    
      <category term="git" scheme="https://jmpan.site/categories/git/"/>
    
    
      <category term="bug" scheme="https://jmpan.site/tags/bug/"/>
    
  </entry>
  
  <entry>
    <title>阿里云图床搭建</title>
    <link href="https://jmpan.site/posts/b9a4e327/"/>
    <id>https://jmpan.site/posts/b9a4e327/</id>
    <published>2019-11-08T09:03:36.000Z</published>
    <updated>2019-11-08T11:10:34.345Z</updated>
    
    <content type="html"><![CDATA[<p>为了加速博客访问速度，降低服务器压力，我选择使用了阿里云作为图床。</p><a id="more"></a><h2 id="阿里云OSS对象存储"><a href="#阿里云OSS对象存储" class="headerlink" title="阿里云OSS对象存储"></a>阿里云OSS对象存储</h2><ol><li>首先登录<a href="https://oss.console.aliyun.com/overview" target="_blank" rel="noopener">阿里云OSS对象存储控制台</a></li></ol><p><img src="https://jmpan.oss-cn-shanghai.aliyuncs.com/img/20191108171052.png" alt="阿里云OSS对象存储控制台截图"></p><ol start="2"><li>点击右侧的“Bucket 管理”一栏下的<code>Access Key</code>或者直接点击<a href="https://usercenter.console.aliyun.com/#/manage/ak" target="_blank" rel="noopener">链接</a>获取用户Access Key，保存<code>AccessKey ID</code>和<code>Access Key Secret</code>。</li><li>返回控制台，点击左边存储空间中的”+”创建一个bucket，并将读写权限改成<code>公共读</code></li><li>点击文件管理新建一个文件夹用于存储</li></ol><h2 id="PicGo本地客户端"><a href="#PicGo本地客户端" class="headerlink" title="PicGo本地客户端"></a>PicGo本地客户端</h2><ol><li>在<a href="https://github.com/Molunerfinn/PicGo" target="_blank" rel="noopener">github</a>上下载对应版本并安装</li><li>打开之后点击图床设置keyID和Secret为之前保存的AccessKey，存储空间名为backet名，区域为对象存储控制台中的访问域名第一部分，指定存储路径为之前创建的文件夹<br><img src="https://jmpan.oss-cn-shanghai.aliyuncs.com/img/20191108173428.png" alt="PicGo"></li><li>点击上传区上传，可以设置复制的链接格式<br><img src="https://jmpan.oss-cn-shanghai.aliyuncs.com/img/20191108181256.png" alt="上传区"></li><li>最后直接点击相册，复制对应的图片即可</li></ol><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><p><a href="https://github.com/Molunerfinn/PicGo" target="_blank" rel="noopener">https://github.com/Molunerfinn/PicGo</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;为了加速博客访问速度，降低服务器压力，我选择使用了阿里云作为图床。&lt;/p&gt;
    
    </summary>
    
    
      <category term="hexo" scheme="https://jmpan.site/categories/hexo/"/>
    
    
      <category term="阿里云" scheme="https://jmpan.site/tags/%E9%98%BF%E9%87%8C%E4%BA%91/"/>
    
      <category term="图床" scheme="https://jmpan.site/tags/%E5%9B%BE%E5%BA%8A/"/>
    
  </entry>
  
  <entry>
    <title>next主题更新</title>
    <link href="https://jmpan.site/posts/e8634da4/"/>
    <id>https://jmpan.site/posts/e8634da4/</id>
    <published>2019-11-08T08:53:02.000Z</published>
    <updated>2019-11-08T09:07:24.782Z</updated>
    
    <content type="html"><![CDATA[<p>next主题更新方法</p><a id="more"></a><ol><li>创建<code>/source/_data/next.yml</code>文件</li><li>复制<code>/_config.yml</code>和<code>/themes/next/_config.yml</code>中需要的选项到<code>/source/_data/next.yml</code>中</li><li>执行<code>hexo clean &amp;&amp; hexo g -d &amp;&amp; hexo s</code></li></ol><p>需要更新时执行以下命令</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd themes/next</span><br><span class="line">git pull</span><br></pre></td></tr></table></figure><p>然后将想要使用的选项手动复制到<code>/source/_data/next.yml</code>中即可。<br>建议访问<a href="https://theme-next.org/" target="_blank" rel="noopener">next主题官网</a>查看更新的feature或者删除的内容。</p><p>对于git时出现错误的情况，可以使用以下方法：</p><ol><li><p>commit</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit -m <span class="string">"My message"</span></span><br></pre></td></tr></table></figure></li><li><p>Stash </p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git stash</span><br><span class="line">git stash pop</span><br></pre></td></tr></table></figure></li><li><p>Discard the local changes</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git reset --hard</span><br></pre></td></tr></table></figure><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2></li><li><p><a href="https://github.com/theme-next/hexo-theme-next/blob/master/docs/DATA-FILES.md" target="_blank" rel="noopener">https://github.com/theme-next/hexo-theme-next/blob/master/docs/DATA-FILES.md</a></p></li><li><p><a href="https://stackoverflow.com/questions/15745045/how-do-i-resolve-git-saying-commit-your-changes-or-stash-them-before-you-can-me/15745424#15745424" target="_blank" rel="noopener">https://stackoverflow.com/questions/15745045/how-do-i-resolve-git-saying-commit-your-changes-or-stash-them-before-you-can-me/15745424#15745424</a></p></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;next主题更新方法&lt;/p&gt;
    
    </summary>
    
    
      <category term="hexo" scheme="https://jmpan.site/categories/hexo/"/>
    
    
      <category term="next" scheme="https://jmpan.site/tags/next/"/>
    
  </entry>
  
  <entry>
    <title>hexo博客域名绑定</title>
    <link href="https://jmpan.site/posts/bf04203b/"/>
    <id>https://jmpan.site/posts/bf04203b/</id>
    <published>2019-11-01T03:32:54.000Z</published>
    <updated>2019-11-01T09:07:42.858Z</updated>
    
    <content type="html"><![CDATA[<p>GIthub Page给的username.github.io的链接不是很美观，希望通过绑定域名的方式提高网站的辨识度</p><a id="more"></a><h2 id="购买域名"><a href="#购买域名" class="headerlink" title="购买域名"></a>购买域名</h2><p>我是在GoDaddy上买的.me域名，推荐使用阿里云和腾讯云购买域名，这样后面备案、做图床都比较方便，.me域名是不能备案的，所以我计划后面更换成其他域名</p><h2 id="Github设置"><a href="#Github设置" class="headerlink" title="Github设置"></a>Github设置</h2><p>在source文件夹下添加CNAME文件，输入域名<br>在仓库的setting里可以设置https</p><h2 id="DNS解析"><a href="#DNS解析" class="headerlink" title="DNS解析"></a>DNS解析</h2><p><img src="https://jmpan.oss-cn-shanghai.aliyuncs.com/img/20191101160350.png" alt=""></p><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><p><a href="https://pages.github.com/" target="_blank" rel="noopener">https://pages.github.com/</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;GIthub Page给的username.github.io的链接不是很美观，希望通过绑定域名的方式提高网站的辨识度&lt;/p&gt;
    
    </summary>
    
    
      <category term="hexo" scheme="https://jmpan.site/categories/hexo/"/>
    
    
      <category term="domain" scheme="https://jmpan.site/tags/domain/"/>
    
  </entry>
  
  <entry>
    <title>vscode + remote -SSH实现远程连接服务器</title>
    <link href="https://jmpan.site/posts/eaf1f/"/>
    <id>https://jmpan.site/posts/eaf1f/</id>
    <published>2019-11-01T02:07:35.000Z</published>
    <updated>2019-11-01T02:49:17.713Z</updated>
    
    <content type="html"><![CDATA[<p>常用的SSH工具如putty、xshell、termius等软件可以比较方便的进行命令行操作，但是不能很好地编辑文件（在输入命令行时不能看到文件的内容、文件路径名不够清晰等）这时候可以采用vscode以及微软官方提供的remote插件。</p><a id="more"></a><h2 id="安装步骤"><a href="#安装步骤" class="headerlink" title="安装步骤"></a>安装步骤</h2><h3 id="安装OpenSSH"><a href="#安装OpenSSH" class="headerlink" title="安装OpenSSH"></a>安装OpenSSH</h3><ol><li>以管理员身份启动 PowerShell</li><li>确保可以安装OpenSSH<figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Get-WindowsCapability -Online | ? Name <span class="nomarkup">-like</span> <span class="string">'OpenSSH*'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># This should return the following output:</span></span><br><span class="line"></span><br><span class="line">Name  : OpenSSH.Client~~~~<span class="number">0.0</span>.<span class="number">1.0</span></span><br><span class="line">State : NotPresent</span><br><span class="line">Name  : OpenSSH.Server~~~~<span class="number">0.0</span>.<span class="number">1.0</span></span><br><span class="line">State : NotPresent</span><br></pre></td></tr></table></figure></li><li>安装OpenSSH client<figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Install the OpenSSH Client</span></span><br><span class="line">Add-WindowsCapability -Online -Name OpenSSH.Client~~~~<span class="number">0.0</span>.<span class="number">1.0</span></span><br></pre></td></tr></table></figure><h3 id="安装Remote-SSH插件"><a href="#安装Remote-SSH插件" class="headerlink" title="安装Remote -SSH插件"></a>安装Remote -SSH插件</h3>点击vscode左侧的extension，输入”remote -SSH”，安装<code>Remote - SSH</code>和<code>Remote - SSH: Editing Configuration Files</code>即可</li></ol><h2 id="设置host"><a href="#设置host" class="headerlink" title="设置host"></a>设置host</h2><ol><li>按F1键并执行<code>remote-ssh: add new ssh host</code></li><li>输入ssh命令添加host，命令格式为<code>ssh 用户名@服务器ip或域名 -A</code></li><li>输入密码</li><li>连接之后就可以打开文件夹进行使用了</li></ol><h2 id="杂项"><a href="#杂项" class="headerlink" title="杂项"></a>杂项</h2><ol><li>左下角会有图标，点击也可以直接连接</li><li>设置服务器的信息和插件的属性可以按F1键，执行<code>remote-ssh: open configuration file</code>, <a href="https://linux.die.net/man/5/ssh_config" target="_blank" rel="noopener">参数表</a></li></ol><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><p><a href="https://code.visualstudio.com/docs/remote/ssh" target="_blank" rel="noopener">https://code.visualstudio.com/docs/remote/ssh</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;常用的SSH工具如putty、xshell、termius等软件可以比较方便的进行命令行操作，但是不能很好地编辑文件（在输入命令行时不能看到文件的内容、文件路径名不够清晰等）这时候可以采用vscode以及微软官方提供的remote插件。&lt;/p&gt;
    
    </summary>
    
    
      <category term="vscode" scheme="https://jmpan.site/categories/vscode/"/>
    
    
      <category term="extensions" scheme="https://jmpan.site/tags/extensions/"/>
    
      <category term="remote" scheme="https://jmpan.site/tags/remote/"/>
    
  </entry>
  
  <entry>
    <title>Unsupervised Adversarial Attacks on Deep Feature-based Retrieval with GAN</title>
    <link href="https://jmpan.site/posts/c225c505/"/>
    <id>https://jmpan.site/posts/c225c505/</id>
    <published>2019-10-30T11:52:37.000Z</published>
    <updated>2019-11-13T07:40:28.979Z</updated>
    
    <content type="html"><![CDATA[<h1 id="使用GAN对基于深度特征的检索进行无监督对抗攻击"><a href="#使用GAN对基于深度特征的检索进行无监督对抗攻击" class="headerlink" title="使用GAN对基于深度特征的检索进行无监督对抗攻击"></a>使用GAN对基于深度特征的检索进行无监督对抗攻击</h1><p>本文使用无监督生成对抗网络(UAA-GAN)对图像检索系统攻击。UAA-GAN只需要很少的未标记数据来进行训练。训练后，该模型可以对查询图像产生特定的扰动，生成对抗样本。核心思想是确保扰动人眼无法察觉，同时尽量远离深度特征空间。</p><p>UAA-GAN适用于各种基于深度特征的应用场景，包含图像检索，人脸识别等。实验结果表明，在查询图像的视觉特征变化不明显的情况下，UAA-GAN削弱了检索性能。UAA-GAN生成的图片很难区分，因为往往在图像的纹理和突出区域(人脸的关键部位、主要结构/边缘)添加轻微扰动，在视觉不重要的区域基本不变(背景和天空)。这表明，UAA-GAN确实学会了如何处理图像检索系统和人眼。</p><a id="more"></a><h2 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h2><p>DNN在CBIR中应用比较广泛，渐渐取代了人工标记。基于DNN的模型通过将预训练好的DNN顶层的活动聚集起来，生成图像的深度特征描述符，然后根据特征向量的欧氏距离或余弦相似度来确定两幅图像之间的相似度(或距离)。这比基于关键点的特征保存了更多的全局语义。但是DNN的鲁棒性和稳定性的研究很少。生成对抗样本可以fool图像检索系统。<br><img src="https://jmpan.oss-cn-shanghai.aliyuncs.com/img/20191101160559.jpg" alt="Fig1.生成对抗样本攻击图像检索系统的例子"></p><p>攻击图像检索系统比攻击图像分类模型更困难：</p><ol><li>FC层和softmax对关键点和区域的修改更加敏感。微小的扰动可以显著降低<code>局部</code>特征检测器卷积核的激活。对于图像检索系统来讲，它是在一个全局特征的数据库中进行搜索的。这些全局特征在CNN的多个max pooling或者sum-pooling池中搜索，对局部的扰动更加鲁棒。</li><li>标签和梯度信息缺乏。</li></ol><p>本文提出的UAA-GAN，具有以下特性：</p><ol><li>生成的对抗样本距离原图像较远</li><li>添加的扰动较小，肉眼无法察觉</li><li>对抗样本看起来比较自然</li></ol><p>本文的贡献有：</p><ol><li>提出UAA-GAN生成人眼无法分辨的对抗样本</li><li>UAA-GAN无监督，只需要比较小的样本，训练完成后，可以对每个样本添加扰动</li><li>UAA-GAN评价指标：CBIR，身份鉴定，人脸搜索。实验结果表明，UAA-GAN在所有任务中都有效</li></ol><h2 id="Related-Work"><a href="#Related-Work" class="headerlink" title="Related Work"></a>Related Work</h2><h3 id="Adversarial-Example"><a href="#Adversarial-Example" class="headerlink" title="Adversarial Example"></a>Adversarial Example</h3><p>常用的一些针对分类模型的对抗样本方法：</p><ol><li>添加小心制造的、微小的扰动(Intriguing properties of neural networks)</li><li>FSGM(Explaining and harnessing adversarial examples) &amp; iterative variation(Adversarial machine learning at scale)</li><li>AdvGAN(Generating adversarial examples with adversarial networks)</li><li>DeepFool &amp; UAP</li><li>PS-GAN (Perceptualsensitive gan for generating adversarial patches)</li><li><h3 id="Deep-Feature-based-Image-Retrieval"><a href="#Deep-Feature-based-Image-Retrieval" class="headerlink" title="Deep Feature-based Image Retrieval"></a>Deep Feature-based Image Retrieval</h3>最新的基于DNN的检索方法通过从预训练或微调的CNN模型中提取的聚合深度特征来表示图像。两幅图像之间的相似度可以直接用深度特征空间中两图对应的欧氏距离或余弦相似度来衡量。</li></ol><h3 id="Generative-Adversarial-Networks"><a href="#Generative-Adversarial-Networks" class="headerlink" title="Generative Adversarial Networks"></a>Generative Adversarial Networks</h3><p>AdvGAN和PS-GAN应用到了对抗样本中</p><h2 id="Methodology"><a href="#Methodology" class="headerlink" title="Methodology"></a>Methodology</h2><p>UAA-GAN受GAN框架启发。也受residual learning启发，让generator学习真实图像到扰动的映射，然后用跳连接将扰动添加到真实图像上。<br><img src="https://jmpan.oss-cn-shanghai.aliyuncs.com/img/20191101160602.jpg" alt=""></p><h3 id="Problem-Formulation"><a href="#Problem-Formulation" class="headerlink" title="Problem Formulation"></a>Problem Formulation</h3><p>GAN的部分似乎存在问题：鉴别器D的条件只用来判断真假的话，若条件太过宽松则无意义，若条件太过苛刻就直接像素比对了。而且，在生成器G中，如果直接将添加的扰动设置一个较小的范围，则整个模型将没有意义</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;使用GAN对基于深度特征的检索进行无监督对抗攻击&quot;&gt;&lt;a href=&quot;#使用GAN对基于深度特征的检索进行无监督对抗攻击&quot; class=&quot;headerlink&quot; title=&quot;使用GAN对基于深度特征的检索进行无监督对抗攻击&quot;&gt;&lt;/a&gt;使用GAN对基于深度特征的检索进行无监督对抗攻击&lt;/h1&gt;&lt;p&gt;本文使用无监督生成对抗网络(UAA-GAN)对图像检索系统攻击。UAA-GAN只需要很少的未标记数据来进行训练。训练后，该模型可以对查询图像产生特定的扰动，生成对抗样本。核心思想是确保扰动人眼无法察觉，同时尽量远离深度特征空间。&lt;/p&gt;
&lt;p&gt;UAA-GAN适用于各种基于深度特征的应用场景，包含图像检索，人脸识别等。实验结果表明，在查询图像的视觉特征变化不明显的情况下，UAA-GAN削弱了检索性能。UAA-GAN生成的图片很难区分，因为往往在图像的纹理和突出区域(人脸的关键部位、主要结构/边缘)添加轻微扰动，在视觉不重要的区域基本不变(背景和天空)。这表明，UAA-GAN确实学会了如何处理图像检索系统和人眼。&lt;/p&gt;
    
    </summary>
    
    
      <category term="paper" scheme="https://jmpan.site/categories/paper/"/>
    
    
      <category term="adversarial example" scheme="https://jmpan.site/tags/adversarial-example/"/>
    
      <category term="image retrieval" scheme="https://jmpan.site/tags/image-retrieval/"/>
    
      <category term="GAN" scheme="https://jmpan.site/tags/GAN/"/>
    
      <category term="unsupervised learning" scheme="https://jmpan.site/tags/unsupervised-learning/"/>
    
  </entry>
  
  <entry>
    <title>11. Container With Most Water</title>
    <link href="https://jmpan.site/posts/d778649/"/>
    <id>https://jmpan.site/posts/d778649/</id>
    <published>2019-10-30T08:18:41.000Z</published>
    <updated>2019-10-30T08:47:21.753Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Problem"><a href="#Problem" class="headerlink" title="Problem"></a>Problem</h2><p>Given n non-negative integers $a_1, a_2, …, a_n$ , where each represents a point at coordinate $(i, a_i)$. <code>n</code> vertical lines are drawn such that the two endpoints of line i is at $(i, ai)$ and $(i, 0)$. Find two lines, which together with x-axis forms a container, such that the container contains the most water.</p><a id="more"></a><p><strong>Note:</strong></p><p>You may not slant the container and n is at least 2.</p><p><strong>Example:</strong></p><pre><code>Input: [1,8,6,2,5,4,8,3,7]Output: 49</code></pre><h2 id="Analysis"><a href="#Analysis" class="headerlink" title="Analysis"></a>Analysis</h2><p>$a_1$代表横坐标为1，高度为$a_i$的线段，这道题求能装水的最大面积，实际上就是求两条线段之间的距离*较短的线段长度的最大值。</p><h2 id="code"><a href="#code" class="headerlink" title="code"></a>code</h2><h3 id="Solution-1"><a href="#Solution-1" class="headerlink" title="Solution 1"></a>Solution 1</h3><p>首先我是想采用迭代的方法解决，但是会超时</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">maxArea</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; height, <span class="keyword">int</span> left, <span class="keyword">int</span> right)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (left == right - <span class="number">1</span>)</span><br><span class="line"><span class="keyword">return</span> min(height[left], height[right]);</span><br><span class="line"><span class="keyword">int</span> i = left+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">int</span> j = right<span class="number">-1</span>;</span><br><span class="line"><span class="keyword">while</span> (height[i] &lt; height[left]) &#123;</span><br><span class="line"><span class="keyword">if</span> (i == right - <span class="number">1</span>) &#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">++i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> area_i = maxArea(height, i, right);</span><br><span class="line"><span class="keyword">while</span> (height[j] &lt; height[right]) &#123;</span><br><span class="line"><span class="keyword">if</span> (left == j - <span class="number">1</span>) &#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">--j;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> area_j = maxArea(height, left, j);</span><br><span class="line"><span class="keyword">return</span> max(min(height[left], height[right]) * (right - left), area_i, area_j);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">maxArea</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; height)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> left = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> right = height.size()<span class="number">-1</span>;</span><br><span class="line"><span class="keyword">return</span> maxArea(height, left, right);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Solution-2"><a href="#Solution-2" class="headerlink" title="Solution 2"></a>Solution 2</h3><p>第二种方法是直接从两边往中间逼近，采用类似于木桶原理的补齐短板策略：较短的一条边是限制容量的关键，所以只需要更新较短的边即可</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">min</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (a &gt; b)</span><br><span class="line">            <span class="keyword">return</span> b;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">return</span> a;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">maxArea</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; height)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> left = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> right = height.size()<span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">int</span> area = min(height[left], height[right]) * (right - left);</span><br><span class="line">        <span class="keyword">while</span> (left &lt; right) &#123;</span><br><span class="line">            <span class="keyword">if</span> (height[left] &lt; height[right])</span><br><span class="line">                left++;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                right--;</span><br><span class="line">            <span class="keyword">if</span> (min(height[left], height[right]) * (right - left) &gt; area)</span><br><span class="line">                area = min(height[left], height[right]) * (right - left);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> area;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Problem&quot;&gt;&lt;a href=&quot;#Problem&quot; class=&quot;headerlink&quot; title=&quot;Problem&quot;&gt;&lt;/a&gt;Problem&lt;/h2&gt;&lt;p&gt;Given n non-negative integers $a_1, a_2, …, a_n$ , where each represents a point at coordinate $(i, a_i)$. &lt;code&gt;n&lt;/code&gt; vertical lines are drawn such that the two endpoints of line i is at $(i, ai)$ and $(i, 0)$. Find two lines, which together with x-axis forms a container, such that the container contains the most water.&lt;/p&gt;
    
    </summary>
    
    
      <category term="leetcode" scheme="https://jmpan.site/categories/leetcode/"/>
    
    
      <category term="Array" scheme="https://jmpan.site/tags/Array/"/>
    
      <category term="Two Pointers" scheme="https://jmpan.site/tags/Two-Pointers/"/>
    
  </entry>
  
  <entry>
    <title>为主题设置gitalk评论区</title>
    <link href="https://jmpan.site/posts/df970fd6/"/>
    <id>https://jmpan.site/posts/df970fd6/</id>
    <published>2019-10-29T11:22:39.000Z</published>
    <updated>2019-10-29T11:34:50.703Z</updated>
    
    <content type="html"><![CDATA[<p>next主题集成了Gitalk评论，所以不需要安装额外的包即可使用。优点是可以获得评论人的github，方便交流</p><a id="more"></a><p>过程如下：</p><ol><li>注册<a href="https://github.com/settings/applications/new" target="_blank" rel="noopener">Github OAuth Application</a>。Application name随意填，<code>Homepage URL</code>和<code>Authorization callback URL</code>填网站链接或者github page链接，新建完成后保存<code>client_id</code>和<code>client_secret</code></li><li>在Github上新建一个<a href="https://github.com/new" target="_blank" rel="noopener">repository</a></li><li>在next主题的<code>_config.yml</code>文件中修改以下内容<figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Gitalk</span></span><br><span class="line"><span class="comment"># Demo: https://gitalk.github.io</span></span><br><span class="line"><span class="attr">gitalk:</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  github_id:</span> <span class="string">github用户名</span> <span class="comment"># Github repo owner</span></span><br><span class="line"><span class="attr">  repo:</span>  <span class="string">新建的repository名</span> <span class="comment"># Repository name to store issues</span></span><br><span class="line"><span class="attr">  client_id:</span> <span class="string">第一步保存的id</span> <span class="comment"># Github Application Client ID</span></span><br><span class="line"><span class="attr">  client_secret:</span> <span class="string">第一步保存的secret</span> <span class="comment"># Github Application Client Secret</span></span><br><span class="line"><span class="attr">  admin_user:</span> <span class="string">github用户名</span> <span class="comment"># GitHub repo owner and collaborators, only these guys can initialize github issues</span></span><br><span class="line"><span class="attr">  distraction_free_mode:</span> <span class="literal">true</span> <span class="comment"># Facebook-like distraction free mode</span></span><br><span class="line">  <span class="comment"># Gitalk's display language depends on user's browser or system environment</span></span><br><span class="line">  <span class="comment"># If you want everyone visiting your site to see a uniform language, you can set a force language value</span></span><br><span class="line">  <span class="comment"># Available value: en, es-ES, fr, ru, zh-CN, zh-TW</span></span><br><span class="line"><span class="attr">  language:</span> <span class="string">en或zh-CN</span> <span class="comment"># 设置会使所有访问的人使用同一种语言，而不是取决于访问人的系统和浏览器语言</span></span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;next主题集成了Gitalk评论，所以不需要安装额外的包即可使用。优点是可以获得评论人的github，方便交流&lt;/p&gt;
    
    </summary>
    
    
      <category term="hexo" scheme="https://jmpan.site/categories/hexo/"/>
    
    
      <category term="Gitalk" scheme="https://jmpan.site/tags/Gitalk/"/>
    
      <category term="Github" scheme="https://jmpan.site/tags/Github/"/>
    
  </entry>
  
  <entry>
    <title>hexo 博客 bug</title>
    <link href="https://jmpan.site/posts/84b0cd74/"/>
    <id>https://jmpan.site/posts/84b0cd74/</id>
    <published>2019-10-29T07:08:30.000Z</published>
    <updated>2019-10-29T11:12:27.921Z</updated>
    
    <content type="html"><![CDATA[<p>建站中遇到的bug和解决方案</p><a id="more"></a><h2 id="百度网站推送"><a href="#百度网站推送" class="headerlink" title="百度网站推送"></a>百度网站推送</h2><h3 id="报错"><a href="#报错" class="headerlink" title="报错"></a>报错</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">INFO  Start processing</span><br><span class="line">FATAL Something&apos;s wrong. Maybe you can find the solution here: https://hexo.io/docs/troubleshooting.html</span><br><span class="line">TypeError: Cannot read property &apos;count&apos; of undefined</span><br><span class="line">    at Hexo.module.exports (C:\Users\pjm-9\OneDrive\文档\blog\node_modules\hexo-baidu-url-submit\lib\generator.js:4:41)</span><br><span class="line">    at Hexo.&lt;anonymous&gt; (C:\Users\pjm-9\OneDrive\文档\blog\node_modules\bluebird\js\release\method.js:15:34)</span><br><span class="line">    at Promise.map.key (C:\Users\pjm-9\OneDrive\文档\blog\node_modules\hexo\lib\hexo\index.js:332:20)</span><br><span class="line">    at tryCatcher (C:\Users\pjm-9\OneDrive\文档\blog\node_modules\bluebird\js\release\util.js:16:23)</span><br><span class="line">    at MappingPromiseArray._promiseFulfilled (C:\Users\pjm-9\OneDrive\文档\blog\node_modules\bluebird\js\release\map.js:68:38)</span><br><span class="line">    at MappingPromiseArray.PromiseArray._iterate (C:\Users\pjm-9\OneDrive\文档\blog\node_modules\bluebird\js\release\promise_array.js:115:31)</span><br><span class="line">    at MappingPromiseArray.init (C:\Users\pjm-9\OneDrive\文档\blog\node_modules\bluebird\js\release\promise_array.js:79:10)</span><br><span class="line">    at MappingPromiseArray._asyncInit (C:\Users\pjm-9\OneDrive\文档\blog\node_modules\bluebird\js\release\map.js:37:10)</span><br><span class="line">    at _drainQueueStep (C:\Users\pjm-9\OneDrive\文档\blog\node_modules\bluebird\js\release\async.js:97:12)</span><br><span class="line">    at _drainQueue (C:\Users\pjm-9\OneDrive\文档\blog\node_modules\bluebird\js\release\async.js:86:9)</span><br><span class="line">    at Async._drainQueues (C:\Users\pjm-9\OneDrive\文档\blog\node_modules\bluebird\js\release\async.js:102:5)</span><br><span class="line">    at Immediate.Async.drainQueues [as _onImmediate] (C:\Users\pjm-9\OneDrive\文档\blog\node_modules\bluebird\js\release\async.js:15:14)</span><br><span class="line">    at runCallback (timers.js:705:18)</span><br><span class="line">    at tryOnImmediate (timers.js:676:5)</span><br></pre></td></tr></table></figure><h3 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm remove hexo-baidu-url-submit</span><br><span class="line">hexo clean</span><br><span class="line">hexo g</span><br></pre></td></tr></table></figure><p>似乎是因为next自带了百度网站自动推送，删除之后就好了。如果想要打开自动推送，需要将百度的代码复制到<code>themes/next/layout/_third-party/baidu-push.swig</code></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;建站中遇到的bug和解决方案&lt;/p&gt;
    
    </summary>
    
    
      <category term="hexo" scheme="https://jmpan.site/categories/hexo/"/>
    
    
      <category term="hexo" scheme="https://jmpan.site/tags/hexo/"/>
    
      <category term="debug" scheme="https://jmpan.site/tags/debug/"/>
    
  </entry>
  
  <entry>
    <title>10. Regular Expression Matching</title>
    <link href="https://jmpan.site/posts/6358f960/"/>
    <id>https://jmpan.site/posts/6358f960/</id>
    <published>2019-10-28T12:52:49.000Z</published>
    <updated>2019-10-29T10:40:49.734Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Problem"><a href="#Problem" class="headerlink" title="Problem"></a>Problem</h2><p>Given an input string (s) and a pattern (p), implement regular expression matching with support for ‘.’ and ‘*’.</p><pre><code>&apos;.&apos; Matches any single character.&apos;*&apos; Matches zero or more of the preceding element.</code></pre><p>The matching should cover the entire input string (not partial).</p><a id="more"></a><p><strong>Note:</strong></p><ul><li><code>s</code> could be empty and contains only lowercase letters <code>a-z</code>.</li><li><code>p</code> could be empty and contains only lowercase letters <code>a-z</code>, and characters like <code>.</code> or <code>*</code>.</li></ul><p><strong>Example 1:</strong></p><pre><code>Input:s = &quot;aa&quot;p = &quot;a&quot;Output: falseExplanation: &quot;a&quot; does not match the entire string &quot;aa&quot;.</code></pre><p><strong>Example 2:</strong></p><pre><code>Input:s = &quot;aa&quot;p = &quot;a*&quot;Output: trueExplanation: &apos;*&apos; means zero or more of the preceding element, &apos;a&apos;. Therefore, by repeating &apos;a&apos; once, it becomes &quot;aa&quot;.</code></pre><p><strong>Example 3:</strong></p><pre><code>Input:s = &quot;ab&quot;p = &quot;.*&quot;Output: trueExplanation: &quot;.*&quot; means &quot;zero or more (*) of any character (.)&quot;.</code></pre><p><strong>Example 4:</strong></p><pre><code>Input:s = &quot;aab&quot;p = &quot;c*a*b&quot;Output: trueExplanation: c can be repeated 0 times, a can be repeated 1 time. Therefore, it matches &quot;aab&quot;.</code></pre><p><strong>Example 5:</strong></p><pre><code>Input:s = &quot;mississippi&quot;p = &quot;mis*is*p*.&quot;Output: false</code></pre><h2 id="Analysis"><a href="#Analysis" class="headerlink" title="Analysis"></a>Analysis</h2><p>这道题是匹配正则表达式中的<code>*</code>和<code>.</code>。其中<code>*</code>是0或多个前面的字符，<code>.</code>是任意字符。</p><h2 id="code"><a href="#code" class="headerlink" title="code"></a>code</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">isMatch</span><span class="params">(<span class="built_in">string</span> s, <span class="built_in">string</span> p)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> m = s.size();</span><br><span class="line"><span class="keyword">int</span> n = p.size();</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">bool</span>&gt; dp(n + <span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line">dp[<span class="number">0</span>] = <span class="number">1</span>; # 判断p中的元素是否在s中有对应</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= n; i++) &#123;</span><br><span class="line">dp[i] = (<span class="string">'*'</span> == p[i - <span class="number">1</span>]) &amp;&amp; dp[i - <span class="number">2</span>]; # X*可以是<span class="number">0</span>个X，所以这种情况一定满足</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">bool</span> left_up;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m; i++) &#123;</span><br><span class="line">left_up = dp[<span class="number">0</span>];</span><br><span class="line">dp[<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n; j++) &#123;</span><br><span class="line"><span class="keyword">int</span> up = dp[j + <span class="number">1</span>];</span><br><span class="line"><span class="keyword">if</span> (p[j] != <span class="string">'*'</span>) </span><br><span class="line">                    dp[j + <span class="number">1</span>] = (s[i] == p[j] || <span class="string">'.'</span> == p[j]) &amp;&amp; left_up;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">                    dp[j + <span class="number">1</span>] = dp[j - <span class="number">1</span>] || dp[j + <span class="number">1</span>] &amp;&amp; (s[i] == p[j - <span class="number">1</span>] || <span class="string">'.'</span> == p[j - <span class="number">1</span>]);</span><br><span class="line">left_up = up;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> dp[n];</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Problem&quot;&gt;&lt;a href=&quot;#Problem&quot; class=&quot;headerlink&quot; title=&quot;Problem&quot;&gt;&lt;/a&gt;Problem&lt;/h2&gt;&lt;p&gt;Given an input string (s) and a pattern (p), implement regular expression matching with support for ‘.’ and ‘*’.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;apos;.&amp;apos; Matches any single character.
&amp;apos;*&amp;apos; Matches zero or more of the preceding element.&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;The matching should cover the entire input string (not partial).&lt;/p&gt;
    
    </summary>
    
    
      <category term="leetcode" scheme="https://jmpan.site/categories/leetcode/"/>
    
    
      <category term="String" scheme="https://jmpan.site/tags/String/"/>
    
      <category term="Dynamic Programming" scheme="https://jmpan.site/tags/Dynamic-Programming/"/>
    
      <category term="Backtracking" scheme="https://jmpan.site/tags/Backtracking/"/>
    
  </entry>
  
  <entry>
    <title>8. String to Integer (atoi)</title>
    <link href="https://jmpan.site/posts/11a89618/"/>
    <id>https://jmpan.site/posts/11a89618/</id>
    <published>2019-10-28T11:52:02.000Z</published>
    <updated>2019-10-29T10:40:49.738Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Problem"><a href="#Problem" class="headerlink" title="Problem"></a>Problem</h2><p>Implement <code>atoi</code> which converts a string to an integer.</p><p>The function first discards as many whitespace characters as necessary until the first non-whitespace character is found. Then, starting from this character, takes an optional initial plus or minus sign followed by as many numerical digits as possible, and interprets them as a numerical value.</p><p>The string can contain additional characters after those that form the integral number, which are ignored and have no effect on the behavior of this function.</p><p>If the first sequence of non-whitespace characters in str is not a valid integral number, or if no such sequence exists because either str is empty or it contains only whitespace characters, no conversion is performed.</p><p>If no valid conversion could be performed, a zero value is returned.</p><a id="more"></a><p><strong>Note:</strong></p><p>Only the space character ‘ ‘ is considered as whitespace character.<br>Assume we are dealing with an environment which could only store integers within the 32-bit signed integer range: $[−2^{31},  2^{31} − 1]$. If the numerical value is out of the range of representable values, INT_MAX $(2^{31} − 1)$ or INT_MIN $(−2^{31})$ is returned.</p><p><strong>Example 1:</strong></p><pre><code>Input: &quot;42&quot;Output: 42</code></pre><p><strong>Example 2:</strong></p><pre><code>Input: &quot;   -42&quot;Output: -42Explanation: The first non-whitespace character is &apos;-&apos;, which is the minus sign.            Then take as many numerical digits as possible, which gets 42.</code></pre><p><strong>Example 3:</strong></p><pre><code>Input: &quot;4193 with words&quot;Output: 4193Explanation: Conversion stops at digit &apos;3&apos; as the next character is not a numerical digit.</code></pre><p><strong>Example 4:</strong></p><pre><code>Input: &quot;words and 987&quot;Output: 0Explanation: The first non-whitespace character is &apos;w&apos;, which is not a numerical             digit or a +/- sign. Therefore no valid conversion could be performed.</code></pre><p><strong>Example 5:</strong></p><pre><code>Input: &quot;-91283472332&quot;Output: -2147483648Explanation: The number &quot;-91283472332&quot; is out of the range of a 32-bit signed integer.            Thefore INT_MIN $(−2^{31})$ is returned.</code></pre><h2 id="Analysis"><a href="#Analysis" class="headerlink" title="Analysis"></a>Analysis</h2><p>这道题考察的内容主要是分类讨论的细节。大致分成以下几种情况：</p><ol><li>除了+-以外的字符在数字字符之前出现-&gt;return 0；</li><li>除了+-以外的字符在数字字符之后出现-&gt;return out;</li><li>正负号分开计算</li><li>防止溢出</li></ol><h2 id="code"><a href="#code" class="headerlink" title="code"></a>code</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">myAtoi</span><span class="params">(<span class="built_in">string</span> str)</span> </span>&#123;<span class="keyword">int</span> flag = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">char</span> symbol = <span class="literal">NULL</span>;</span><br><span class="line">        <span class="keyword">int</span> out = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; str.size(); ++i) &#123;</span><br><span class="line">            <span class="keyword">if</span> (str[i] == <span class="string">' '</span> &amp;&amp; flag)</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> ((str[i] &lt; <span class="string">'0'</span> || str[i] &gt;<span class="string">'9'</span>) &amp;&amp; str[i] != <span class="string">'+'</span> &amp;&amp; str[i] != <span class="string">'-'</span>) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (flag)</span><br><span class="line">                        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">                    <span class="keyword">else</span></span><br><span class="line">                        <span class="keyword">return</span> out;</span><br><span class="line">                &#125;</span><br><span class="line">                flag = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">if</span> (str[i] == <span class="string">'-'</span> || str[i] == <span class="string">'+'</span>) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (symbol)</span><br><span class="line">                        <span class="keyword">return</span> out;</span><br><span class="line">                    <span class="keyword">else</span></span><br><span class="line">                        symbol = str[i];</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">if</span> (!symbol)</span><br><span class="line">                        symbol = <span class="string">'+'</span>;</span><br><span class="line">                    <span class="keyword">if</span> (symbol == <span class="string">'+'</span>) &#123;</span><br><span class="line">                        <span class="keyword">if</span> (out &gt; INT_MAX / <span class="number">10</span>) &#123;</span><br><span class="line">                            <span class="keyword">return</span> INT_MAX;</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">else</span> &#123;</span><br><span class="line">                            <span class="keyword">if</span> (INT_MAX - out * <span class="number">10</span> &lt; str[i]-<span class="string">'0'</span>)</span><br><span class="line">                                <span class="keyword">return</span> INT_MAX;</span><br><span class="line">                        &#125;</span><br><span class="line">                        out = str[i] - <span class="string">'0'</span> + out * <span class="number">10</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="keyword">if</span> (out &lt; INT_MIN / <span class="number">10</span>) &#123;</span><br><span class="line">                            <span class="keyword">return</span> INT_MIN;</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">else</span> &#123;</span><br><span class="line">                            <span class="keyword">if</span> (INT_MIN - out * <span class="number">10</span> &gt; -str[i]+<span class="string">'0'</span>)</span><br><span class="line">                                <span class="keyword">return</span> INT_MIN;</span><br><span class="line">                        &#125;</span><br><span class="line">                        out = -str[i] + <span class="string">'0'</span> + out * <span class="number">10</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> out;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Problem&quot;&gt;&lt;a href=&quot;#Problem&quot; class=&quot;headerlink&quot; title=&quot;Problem&quot;&gt;&lt;/a&gt;Problem&lt;/h2&gt;&lt;p&gt;Implement &lt;code&gt;atoi&lt;/code&gt; which converts a string to an integer.&lt;/p&gt;
&lt;p&gt;The function first discards as many whitespace characters as necessary until the first non-whitespace character is found. Then, starting from this character, takes an optional initial plus or minus sign followed by as many numerical digits as possible, and interprets them as a numerical value.&lt;/p&gt;
&lt;p&gt;The string can contain additional characters after those that form the integral number, which are ignored and have no effect on the behavior of this function.&lt;/p&gt;
&lt;p&gt;If the first sequence of non-whitespace characters in str is not a valid integral number, or if no such sequence exists because either str is empty or it contains only whitespace characters, no conversion is performed.&lt;/p&gt;
&lt;p&gt;If no valid conversion could be performed, a zero value is returned.&lt;/p&gt;
    
    </summary>
    
    
      <category term="leetcode" scheme="https://jmpan.site/categories/leetcode/"/>
    
    
      <category term="String" scheme="https://jmpan.site/tags/String/"/>
    
      <category term="Math" scheme="https://jmpan.site/tags/Math/"/>
    
  </entry>
  
  <entry>
    <title>6. ZigZag Conversion</title>
    <link href="https://jmpan.site/posts/36049bdb/"/>
    <id>https://jmpan.site/posts/36049bdb/</id>
    <published>2019-10-28T10:30:13.000Z</published>
    <updated>2019-10-29T10:40:49.739Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Problem"><a href="#Problem" class="headerlink" title="Problem"></a>Problem</h2><p>The string <code>&quot;PAYPALISHIRING&quot;</code> is written in a zigzag pattern on a given number of rows like this: (you may want to display this pattern in a fixed font for better legibility)</p><pre><code>P   A   H   NA P L S I I GY   I   R</code></pre><p>And then read line by line: <code>&quot;PAHNAPLSIIGYIR&quot;</code></p><p>Write the code that will take a string and make this conversion given a number of rows:</p><pre><code>string convert(string s, int numRows); </code></pre><a id="more"></a><p><strong>Example 1:</strong></p><pre><code>Input: s = &quot;PAYPALISHIRING&quot;, numRows = 3Output: &quot;PAHNAPLSIIGYIR&quot;</code></pre><p><strong>Example 2:</strong></p><pre><code>Input: s = &quot;PAYPALISHIRING&quot;, numRows = 4Output: &quot;PINALSIGYAHRPI&quot;Explanation:P     I    NA   L S  I GY A   H RP     I</code></pre><h2 id="Analysis"><a href="#Analysis" class="headerlink" title="Analysis"></a>Analysis</h2><p>这道题是求将一个字符串从上到下锯齿字型按列排序，再按行从左到右输出。可以看到，除了第一行和最后一行，以及最后一个Z型弯，其他行元素个数一致，元素的左右位置不影响最终输出。</p><p>首先考虑特殊情况，即字符串长度小于2和numRows等于1，这两种情况直接输出原字符串。</p><p>其次对于字符串s，将其按循环分割，每个循环共<code>2*numRows-2</code>个元素（第一行和最后一行都是一个元素）</p><p>然后对于每一行，将完整的循环中的元素输出</p><p>最后对于最后一个不完整的循环，输出index小于s.size()的元素即可。</p><h2 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="built_in">string</span> <span class="title">convert</span><span class="params">(<span class="built_in">string</span> s, <span class="keyword">int</span> numRows)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(s.size()&lt;<span class="number">2</span> || numRows == <span class="number">1</span>) </span><br><span class="line">            <span class="keyword">return</span> s;</span><br><span class="line">        <span class="keyword">int</span> cir = s.size() / (<span class="number">2</span> * numRows - <span class="number">2</span>);</span><br><span class="line">        <span class="keyword">int</span> res = s.size() % (<span class="number">2</span> * numRows - <span class="number">2</span>);</span><br><span class="line">        <span class="function"><span class="built_in">string</span> <span class="title">out</span><span class="params">(<span class="string">""</span>)</span></span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; numRows; ++i) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt;= cir; ++j) &#123;</span><br><span class="line">                <span class="keyword">if</span> (j &lt; cir) &#123;</span><br><span class="line">                    out += s[(<span class="number">2</span> * numRows - <span class="number">2</span>) * j + i];</span><br><span class="line">                    <span class="keyword">if</span> (i != <span class="number">0</span> &amp;&amp; <span class="number">2</span> * numRows - <span class="number">2</span> != <span class="number">2</span> * i) &#123;</span><br><span class="line">                        out += s[(<span class="number">2</span> * numRows - <span class="number">2</span>) * (j + <span class="number">1</span>) - i];</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">if</span> ((<span class="number">2</span> * numRows - <span class="number">2</span>) * j + i &lt; s.size()) &#123;</span><br><span class="line">                        out += s[(<span class="number">2</span> * numRows - <span class="number">2</span>) * j + i];</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">if</span> ((<span class="number">2</span> * numRows - <span class="number">2</span>) * (j + <span class="number">1</span>) - i &lt; s.size() &amp;&amp; i != <span class="number">0</span> &amp;&amp; <span class="number">2</span> * numRows - <span class="number">2</span> != <span class="number">2</span> * i) &#123;</span><br><span class="line">                        out += s[(<span class="number">2</span> * numRows - <span class="number">2</span>) * (j + <span class="number">1</span>) - i];</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> out;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Problem&quot;&gt;&lt;a href=&quot;#Problem&quot; class=&quot;headerlink&quot; title=&quot;Problem&quot;&gt;&lt;/a&gt;Problem&lt;/h2&gt;&lt;p&gt;The string &lt;code&gt;&amp;quot;PAYPALISHIRING&amp;quot;&lt;/code&gt; is written in a zigzag pattern on a given number of rows like this: (you may want to display this pattern in a fixed font for better legibility)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;P   A   H   N
A P L S I I G
Y   I   R&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;And then read line by line: &lt;code&gt;&amp;quot;PAHNAPLSIIGYIR&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Write the code that will take a string and make this conversion given a number of rows:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;string convert(string s, int numRows); &lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
    
      <category term="leetcode" scheme="https://jmpan.site/categories/leetcode/"/>
    
    
      <category term="-String" scheme="https://jmpan.site/tags/String/"/>
    
  </entry>
  
  <entry>
    <title>5. Longest Palindromic Substring</title>
    <link href="https://jmpan.site/posts/2fda2b11/"/>
    <id>https://jmpan.site/posts/2fda2b11/</id>
    <published>2019-10-27T06:57:38.000Z</published>
    <updated>2019-10-29T10:40:49.740Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Question"><a href="#Question" class="headerlink" title="Question"></a>Question</h2><p>Given a string s, find the longest palindromic substring in s. You may assume that the maximum length of s is 1000.</p><a id="more"></a><p><strong>Example 1:</strong></p><pre><code>Input: &quot;babad&quot;Output: &quot;bab&quot;Note: &quot;aba&quot; is also a valid answer.</code></pre><p><strong>Example 2:</strong></p><pre><code>Input: &quot;cbbd&quot;Output: &quot;bb&quot;</code></pre><h2 id="Analysis"><a href="#Analysis" class="headerlink" title="Analysis"></a>Analysis</h2><p>这道题是要求string中最长回文子序列，首先特殊情况s长度为1时，最长子序列一定是其本身，之后只需要遍历每一个元素，确定其所在的回文串即可。</p><h2 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line">    <span class="keyword">public</span>:</span><br><span class="line">        <span class="function"><span class="built_in">string</span> <span class="title">longestPalindrome</span><span class="params">(<span class="built_in">string</span> s)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> len = s.size();</span><br><span class="line">        <span class="keyword">if</span> (len &lt;= <span class="number">1</span>) </span><br><span class="line">            <span class="keyword">return</span> s;</span><br><span class="line">        <span class="keyword">int</span> lpos = <span class="number">0</span>, lm = <span class="number">0</span>; # 回文起始index和回文长度</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; len - <span class="number">1</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (lm &gt;= (len - i) * <span class="number">2</span>) </span><br><span class="line">                <span class="keyword">return</span> s.substr(lpos, lm); # 当前回文串长度大于剩余长度的<span class="number">2</span>倍，即为最长回文串</span><br><span class="line">            <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">while</span> (s[i + <span class="number">1</span>] == s[i] &amp;&amp; i++ &lt; len - <span class="number">1</span>)</span><br><span class="line">                count++; # 相同字符的长度</span><br><span class="line">            <span class="keyword">int</span> end = i;</span><br><span class="line">            <span class="keyword">int</span> first = i - count; # 回文串首部</span><br><span class="line">            <span class="keyword">while</span> (first &gt;= <span class="number">0</span> &amp;&amp; end &lt; len &amp;&amp; s[first] == s[end]) &#123;</span><br><span class="line">                first--;</span><br><span class="line">                end++; # 相同字符之外的长度</span><br><span class="line">            &#125;</span><br><span class="line">            end--;</span><br><span class="line">            first++;</span><br><span class="line">            <span class="keyword">if</span> (lm &lt; end - first + <span class="number">1</span>) &#123;</span><br><span class="line">                lpos = first;</span><br><span class="line">                lm = end - first + <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> s.substr(lpos, lm);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Question&quot;&gt;&lt;a href=&quot;#Question&quot; class=&quot;headerlink&quot; title=&quot;Question&quot;&gt;&lt;/a&gt;Question&lt;/h2&gt;&lt;p&gt;Given a string s, find the longest palindromic substring in s. You may assume that the maximum length of s is 1000.&lt;/p&gt;
    
    </summary>
    
    
      <category term="leetcode" scheme="https://jmpan.site/categories/leetcode/"/>
    
    
      <category term="String" scheme="https://jmpan.site/tags/String/"/>
    
      <category term="Dynamic Programming" scheme="https://jmpan.site/tags/Dynamic-Programming/"/>
    
  </entry>
  
  <entry>
    <title>4. Median of Two Sorted Arrays</title>
    <link href="https://jmpan.site/posts/55c9d07b/"/>
    <id>https://jmpan.site/posts/55c9d07b/</id>
    <published>2019-10-23T07:22:39.000Z</published>
    <updated>2019-10-29T10:40:49.731Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Question"><a href="#Question" class="headerlink" title="Question"></a>Question</h2><p>There are two sorted arrays <strong>nums1</strong> and <strong>nums2</strong> of size m and n respectively.</p><p>Find the median of the two sorted arrays. The overall run time complexity should be O(log (m+n)).</p><p>You may assume <strong>nums1</strong> and <strong>nums2</strong> cannot be both empty.</p><a id="more"></a><p><strong>Example 1:</strong></p><pre><code>nums1 = [1, 3]nums2 = [2]The median is 2.0</code></pre><p><strong>Example 2:</strong></p><pre><code>nums1 = [1, 2]nums2 = [3, 4]The median is (2 + 3)/2 = 2.5</code></pre><h2 id="Analysis"><a href="#Analysis" class="headerlink" title="Analysis"></a>Analysis</h2><p>这道题是要求两个<strong>有序vector</strong>的中位数，要求时间复杂度O(log (m+n))。我的思路是分别设定两个index对应两个vector，进行迭代，每次将两个列表中最小的元素输出。对于总元素数为偶数的情况，在得到index为N/2的元素之后，继续与下一个元素求和除以2，对于总元素为奇数的情况，直接输出即可。</p><h2 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">double</span> <span class="title">findMedianSortedArrays</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; nums1, <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; nums2)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> n = nums1.size()+nums2.size();</span><br><span class="line">        <span class="keyword">double</span> res;</span><br><span class="line">        <span class="keyword">if</span>(n%<span class="number">2</span>==<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">int</span> i = n/<span class="number">2</span>;</span><br><span class="line">            <span class="keyword">int</span> index1=<span class="number">0</span>, index2=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">int</span> tmp;</span><br><span class="line">            <span class="keyword">while</span>(i&gt;<span class="number">0</span>)&#123;</span><br><span class="line">                i--;</span><br><span class="line">                <span class="keyword">if</span>(index1==nums1.size())&#123;</span><br><span class="line">                    tmp=nums2[index2];</span><br><span class="line">                    index2++;</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(index2==nums2.size())&#123;</span><br><span class="line">                    tmp=nums1[index1];</span><br><span class="line">                    index1++;</span><br><span class="line">                    <span class="keyword">continue</span>;                    </span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(nums1[index1]&gt;nums2[index2])&#123;</span><br><span class="line">                    tmp=nums2[index2];</span><br><span class="line">                    index2++;</span><br><span class="line">                    </span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span>&#123;</span><br><span class="line">                    tmp=nums1[index1];</span><br><span class="line">                    index1++;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(index1==nums1.size())&#123;</span><br><span class="line">                res = (tmp+nums2[index2])/<span class="number">2.0</span>;</span><br><span class="line">                <span class="keyword">return</span> res;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(index2==nums2.size())&#123;</span><br><span class="line">                res = (tmp+nums1[index1])/<span class="number">2.0</span>;      </span><br><span class="line">                <span class="keyword">return</span> res;</span><br><span class="line">            &#125;</span><br><span class="line">            res = (tmp+min(nums1[index1],nums2[index2]))/<span class="number">2.0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">int</span> i = n/<span class="number">2</span>;</span><br><span class="line">            <span class="keyword">int</span> index1=<span class="number">0</span>, index2=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">int</span> tmp;</span><br><span class="line">            <span class="keyword">while</span>(i&gt;=<span class="number">0</span>)&#123;</span><br><span class="line">                i--;</span><br><span class="line">                <span class="keyword">if</span>(index1==nums1.size())&#123;</span><br><span class="line">                    tmp=nums2[index2];</span><br><span class="line">                    index2++;</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(index2==nums2.size())&#123;</span><br><span class="line">                    tmp=nums1[index1];</span><br><span class="line">                    index1++;</span><br><span class="line">                    <span class="keyword">continue</span>;                    </span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(nums1[index1]&gt;nums2[index2])&#123;</span><br><span class="line">                    tmp=nums2[index2];</span><br><span class="line">                    index2++;</span><br><span class="line">                    </span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span>&#123;</span><br><span class="line">                    tmp=nums1[index1];</span><br><span class="line">                    index1++;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            res = tmp;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Question&quot;&gt;&lt;a href=&quot;#Question&quot; class=&quot;headerlink&quot; title=&quot;Question&quot;&gt;&lt;/a&gt;Question&lt;/h2&gt;&lt;p&gt;There are two sorted arrays &lt;strong&gt;nums1&lt;/strong&gt; and &lt;strong&gt;nums2&lt;/strong&gt; of size m and n respectively.&lt;/p&gt;
&lt;p&gt;Find the median of the two sorted arrays. The overall run time complexity should be O(log (m+n)).&lt;/p&gt;
&lt;p&gt;You may assume &lt;strong&gt;nums1&lt;/strong&gt; and &lt;strong&gt;nums2&lt;/strong&gt; cannot be both empty.&lt;/p&gt;
    
    </summary>
    
    
      <category term="leetcode" scheme="https://jmpan.site/categories/leetcode/"/>
    
    
      <category term="Array" scheme="https://jmpan.site/tags/Array/"/>
    
      <category term="Binary Search" scheme="https://jmpan.site/tags/Binary-Search/"/>
    
      <category term="Divide and Conquer" scheme="https://jmpan.site/tags/Divide-and-Conquer/"/>
    
  </entry>
  
</feed>
